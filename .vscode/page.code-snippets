{
    "new-page": {
        "prefix": "new-page",
        "body": [
            "import Page from '@/components/Page';",
            "import { View } from '@tarojs/components';",
            "import React from 'react';",
            "",
            "/** 用于埋点的 pageId (必须) */",
            "const PAGE_ID = '';",
            "",
            "definePageConfig({",
            "  navigationBarTitleText: '页面名称',",
            "});",
            "",
            "export default function () {",
            "  return (",
            "    <Page pageId={PAGE_ID}>",
            "      <View>页面组件</View>",
            "    </Page>",
            "  );",
            "}",
            ""
        ],
        "description": "页面模板\n 必须要定义一个全应用 pageId\n Page组件已经帮你干了很多事了\n你只需要定义一个id，求求你了"
    },
    "new-tab": {
        "prefix": "new-tab",
        "body": [
            "import CustomTabbar from '@/components/CustomTabbar';",
            "import Page from '@/components/Page';",
            "import { View } from '@tarojs/components';",
            "import React from 'react';",
            "",
            "/** 用于埋点的 pageId (必须) */",
            "const PAGE_ID = 'mine';",
            "",
            "definePageConfig({",
            "  navigationBarTitleText: '页面名称',",
            "});",
            "",
            "export default function () {",
            "  return (",
            "    <Page pageId={PAGE_ID} tabView>",
            "      <View>TabView</View>",
            "      <CustomTabbar />",
            "    </Page>",
            "  );",
            "}",
            ""
        ],
        "description": "tab页面模板 \n必须要定义一个全应用 pageId\n Page组件已经帮你干了很多事了\n你只需要定义一个id，求求你了"
    },
    "new-form": {
        "prefix": "new-form",
        "body": [
            "import { Text, View, Button } from '@tarojs/components';",
            "import Taro from '@tarojs/taro';",
            "import { ValidationErrors } from 'final-form';",
            "import { Field, Form } from 'react-final-form';",
            "import { AtInput } from 'taro-ui';",
            "import 'taro-ui/dist/style/components/input.scss';",
            "",
            "type Data = {",
            "  phone: string;",
            "};",
            "",
            "interface IMyFormProps {",
            "  initialValues?: Data;",
            "  onSubmit: (data: Data) => void;",
            "}",
            "",
            "function MyForm({ onSubmit, initialValues }: IMyFormProps) {",
            "  return (",
            "    <Form",
            "      onSubmit={onSubmit}",
            "      initialValues={initialValues}",
            "      validate={validate}",
            "      render={({ handleSubmit, form }) => (",
            "        <View>",
            "          <Field name=\"phone\" type=\"phone\">",
            "            {({ input, meta }) => (",
            "              <View>",
            "                <AtInput",
            "                  required",
            "                  error={meta.touched && meta.error}",
            "                  title=\"手机号码\"",
            "                  placeholder=\"手机号码\"",
            "                  {...(input as any)}",
            "                  onErrorClick={() => {",
            "                    // 点击显示",
            "                    Taro.showToast({",
            "                      title: meta.error,",
            "                      icon: 'none',",
            "                    });",
            "                  }}",
            "                />",
            "                {/* 下方显示 */}",
            "                {meta.touched && meta.error && <Text>{meta.error}</Text>}",
            "              </View>",
            "            )}",
            "          </Field>",
            "          <Button onClick={handleSubmit}>提交</Button>",
            "          <Button onClick={() => form.reset()}>重置</Button>",
            "        </View>",
            "      )}",
            "    />",
            "  );",
            "}",
            "",
            "/** 校验 */",
            "function validate(values: Data): ValidationErrors | Promise<ValidationErrors> {",
            "  const errors: Partial<Record<keyof Data, any>> = {};",
            "  if (!values.phone) {",
            "    errors.phone = '手机号码为必填项';",
            "  }",
            "  return errors;",
            "}",
            "",
            "export default MyForm;"
        ],
        "description": "form 页面模板，当需要复杂校验时\n可以使用react-final-form管理表单\n这里提供 校验/提交/重置 的示例"
    },
}